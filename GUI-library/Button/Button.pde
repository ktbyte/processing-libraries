KTGUI ktgui;

Button btn;

/************************************************************************************************
 *
 ************************************************************************************************/
void setup() {
  size(400, 400);
  ktgui = new KTGUI();
  btn = new Button(100, 100, 200, 100);
  btn.addListener(new ButtonListener() {
    public void onPressed() {
      println("The button was pressed!!!");
    }
  }
  );
}


/************************************************************************************************
 *
 ************************************************************************************************/
void draw() {
  background(225);
  ktgui.drawDrawables();
}


/************************************************************************************************
 *
 ************************************************************************************************/
void mouseMoved() {
  ktgui.processMouseHovered();
}


/************************************************************************************************
 *
 ************************************************************************************************/
void mousePressed() {
  ktgui.processMousePressed();
}


/************************************************************************************************
 *
 ************************************************************************************************/
void mouseReleased() {
  ktgui.processMouseReleased();
}

//**********************************************************************************************
//
//**********************************************************************************************
interface ButtonListener {
  void onPressed();
}


//**********************************************************************************************
//
//**********************************************************************************************
class Button implements Pressable, Drawable, Hoverable {
  boolean isPressed, isHovered;
  int x, y, width, height;
  color HOVERED = color(100, 100, 200, 250);
  color PRESSED = color(250, 50, 50);
  color PASSIVE = color(100);
  ArrayList<ButtonListener> listeners = new ArrayList<ButtonListener>();
  
  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  Button(int x, int y, int width, int height) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
    ktgui.pressables.add(this);
    ktgui.hoverables.add(this);
    ktgui.drawables.add(this);
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void draw() {
    pushStyle();
    if (isHovered) {
      strokeWeight(5);
      stroke(50, 200, 50);
      fill(HOVERED);
    } else {
      strokeWeight(1);
      stroke(50, 50, 200);
      fill(PASSIVE);
    }
    if (isPressed) {
      fill(PRESSED);
    }
    pushMatrix();
    translate(x, y);
    rectMode(CORNER);
    rect(0, 0, this.width, this.height);
    popMatrix();
    popStyle();

    pushStyle();
    pushMatrix();
    popMatrix();
    popStyle();
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  boolean isPointInside(int ptx, int pty) {
    boolean value = false;
    if (ptx > x && ptx < x + width) {
      if (pty > y && pty < y + height) {
        value = true;
      }
    }
    return value;
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void processMouseHovered(int x, int y) {
    if (isPointInside(x, y)) {
      isHovered = true;
    }else{
      isHovered = false;
    }

  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void processMousePressed(int x, int y) {
    if (isPointInside(x, y)) {
      isPressed = true;
      notifyListeners();
    }
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void processMouseReleased() {
    isPressed = false;
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void notifyListeners() {
    for (ButtonListener listener : listeners) {
      listener.onPressed();
    }
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void addListener(ButtonListener listener) {
    listeners.add(listener);
  }

}

//**********************************************************************************************
//
//**********************************************************************************************
class KTGUI {
  ArrayList<Pressable> pressables = new ArrayList<Pressable>();
  ArrayList<Hoverable> hoverables = new ArrayList<Hoverable>();
  ArrayList<Drawable> drawables = new ArrayList<Drawable>();

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void drawDrawables() {
    for (Drawable drawable : drawables) {
      drawable.draw();
    }
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void processMouseHovered() {
    for (Hoverable hoverable : ktgui.hoverables) {
      hoverable.processMouseHovered(mouseX, mouseY);
    }
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void processMousePressed() {
    for (Pressable pressable : ktgui.pressables) {
      pressable.processMousePressed(mouseX, mouseY);
    }
  }

  //---------------------------------------------------------------------------------------
  //
  //---------------------------------------------------------------------------------------
  void processMouseReleased() {
    for (Pressable pressable : ktgui.pressables) {
      pressable.processMouseReleased();
    }
  }
}



//**********************************************************************************************
//
//**********************************************************************************************
interface Pressable {
  void processMousePressed(int x, int y);
  void processMouseReleased();
}



//**********************************************************************************************
//
//**********************************************************************************************
interface Hoverable {
  void processMouseHovered(int x, int y);
}



//**********************************************************************************************
//
//**********************************************************************************************
interface Drawable {
  void draw();
}

